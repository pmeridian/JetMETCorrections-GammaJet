[CRAB]
jobtype = cmssw
#scheduler = edg 
scheduler = glite

[CMSSW]

### The data you want to access (to be found on DBS) 
datasetpath = /QCD_Pt_120_170/CMSSW_1_5_2-CSA07-2171/GEN-SIM-DIGI-RECO

### The ParameterSet you want to use
pset=/afs/cern.ch/user/d/delre/scratch0/CMSSW/CMSSW_1_6_7/src/MyAnalysis/GammaJetAnalysis/test/config.cfg

### Total number of events to be accessed: -1 means all ("-1" is not usable if no input)
total_number_of_events=500000

### Number of jobs
number_of_jobs = 500

### The output files produced by your application (comma separated list)
output_file = output.root


[USER]
################################
#### additional input file #####
################################

## files to be put in InputSandBox, full path or in the current directory
## (wildcard * are allowed): comma separated list
#additional_input_files = /home_local/fanzago/fede.txt, /home_local/fanzago/fede.prova

#################################
#### JOB OUTPUT MANAGEMENT #####
#################################

### RETRIEVE JOB OUTPUT INTO UI ###
## to have back the job executable output into UI (return_data= 1)
return_data = 1

### If return_data = 1 ###
## UI directory where to store the CMS executable output
## FULL path is mandatory. If none <ui_working_dir>/res will be used.
outputdir=/tmp/output_QCD_Pt_120_170_new

### If return_data = 1 ###
## UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
## FULL path is mandatory. If none <ui_working_dir>/res will be used.
logdir=/tmp/output_QCD_Pt_120_170_new

### COPY JOB OUTPUT INTO A SE ###
## if you want to copy the CMS executable output into a SE (i:e castor)
### WARNING: if the copy fails and return_data = 0, the output is lost
copy_data = 0

### if copy_data = 1 ###
## name of the SE where to copy the CMS executable output.
storage_element = castorgrid.cern.ch
## and the SE directory (or the mountpoint) that has to be writable from all
storage_path = /castor/cern.ch/user/d/delre/CRAB_jet

#################################
####### JOB MONITORING  ### #####
#################################

### Use central BOSS DB instead of one for each task: the DB must be already been setup!
use_central_bossDB = 0

### Use Boss RealTime monitoring
use_boss_rt = 1 

### To use a different set of BOSS config files specify the location here
boss_clads=

[EDG]
################################
###### EDG specific stuff ######
################################

# LCG middleware version installed on testbed
lcg_version = 2

## to change the CMS-broker RB. The ones available for CMS are "CERN" and "CNAF": the configuration
## files needed to change the broker will be automatically downloaded from CRAB web page. If the
## files are already present on the working directory they will be used. 
#rb = CNAF

## CMS myproxy server, to proxy delegation
proxy_server = myproxy.cern.ch 

## Role in VOMS
#role = superman

## Group in VOMS
#group = superheros

## If you don't want CRAB to check your proxy
#dont_check_proxy = 1

## to add other requirements to jdl file, as example the Operating System
#requirements = (other.GlueHostOperatingSystemName == "RedHat")

## to add other parameters to jdl file: comma separated list, each item _must_
## be complete, including the closing ";"
additional_jdl_parameters = AllowZippedISB = false;

## cpu time and wall_clock_time(=real time) in minutes. Written into the jdl file
#max_cpu_time = 60
#max_wall_clock_time = 60

## SE Black List: all the storage elements (SE) containing the following strings (comma
## separated list) will not be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
se_black_list = cern,edu

## SE White List: only the storage elements (SE) containing the following strings (comma
## separated list) will be considered for submission.
## for discovery, please use http://cmslcgco01.cern.ch:8001/
#se_white_list = infn

## CE Black List: all the CE whose name contains the following strings (comma
## separated list) will not be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
ce_black_list = cern,edu

## CE White List: only the CE whose name contains the following strings (comma
## separated list) will be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#ce_white_list = infn

## fields written into jdl
virtual_organization = cms

## number or retry count
retry_count = 2

## LFC catalog parameters
lcg_catalog_type = lfc
lfc_host = lfc-cms-test.cern.ch
lfc_home = /grid/cms

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

